#!/usr/bin/ruby
# Bootstrap server with fog

require 'rubygems'
require 'net/ping'
require 'fog'
require 'optiflag'

f = File.open(
      File.expand_path(
        File.join(
          File.dirname(__FILE__),"../config/bootstrap_chef.sh")))

connection = Fog::Compute.new(
  :provider => "AWS",
  :aws_access_key_id => Fog::credentials[:aws_access_key_id],
  :aws_secret_access_key => Fog::credentials[:aws_secret_access_key]
  )

server = connection.servers.create(
  :image_id => Fog::credentials[:image_id],
  :key_name => Fog::credentials[:key_name],
  :user_data => f.read
)
server.wait_for { 
  ## ready?
  # The only thing this method does in the context of the AWS server object is
  # match server.state to running. Expand the loop to check for HTTP

  if ( state == "running" )
    puts "Instance network up, booting services"
    puts public_ip_address
  end

  webserver = Net::Ping::HTTP.new("http://#{dns_name}:80")
  result = webserver.ping?
  if ( result == true )
    puts "Your tornom node is up"
    puts "http://#{dns_name}:9091"
    yield
  else
    puts "Waiting for server"
  end
}
